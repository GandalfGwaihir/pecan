name: Docker-Stack-Test

on:
  push:
    branches:
      - master
      - develop
      - Docker-Stack-Testing
      - new-branch-for-docker-testing


    tags:
      - '*'

  pull_request:

  merge_group:

  issue_comment:
    types:
      - created

env:
  R_LIBS_USER: /usr/local/lib/R/site-library
  LC_ALL: en_US.UTF-8
  NCPUS: 2
  PGHOST: postgres
  CI: true

jobs:
 

  # ----------------------------------------------------------------------
  # DOCKER STACK TESTS
  # ----------------------------------------------------------------------
  Stack-Test:
    if: github.event_name != 'issue_comment' || startsWith(github.event.comment.body, '/build')
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    strategy:
      fail-fast: false
      matrix:
        name:
            - sipnet_r136

        include:
          - name: sipnet_r136
            modelID: "1000000014"
            siteID: "676"
            siteName: "Willow Creek (US-WCr)"
            pftName: "temperate.deciduous"
            metData: "AmerifluxLBL"
            startDate: "2004/01/01"
            endDate: "2004/12/31"

    #Add more models below in the above format


      


    services:
      postgres:
        image: mdillon/postgis:9.5
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    container: 
      image: pecan/depends

    steps:
    # checkout source code
    - name: work around https://github.com/actions/checkout/issues/766
      run: git config --global --add safe.directory "$GITHUB_WORKSPACE"
    - uses: actions/checkout@v3
      with:
        set-safe-directory: false

    - name: Set up Docker Compose
      run: |
          sudo apt-get update
          sudo apt-get -y install docker-compose
    - name: Build and run containers
      run: |
        docker system prune --all --force
        sudo adduser ${USER} docker
        cp docker-compose.dev.yml docker-compose.override.yml
        cp docker/env.example .env
        echo "COMPOSE_PROJECT_NAME=pecan" >> .env
        echo "PECAN_VERSION=develop" >> .env
        echo "UID=$(id -u)" >> .env
        echo "GID=$(id -g)" >> .env
        mkdir -p $HOME/volumes/pecan/{lib,pecan,portainer,postgres,rabbitmq,traefik}
        docker-compose up -d postgres rabbitmq
        docker run --rm --network pecan_pecan pecan/db
        
        docker-compose run  bety user guestuser guestuser "Guest User" guestuser@example.com 4 4
        
        docker-compose run  bety user carya illinois "Carya Demo User" carya@example.com 1 1
        docker run --rm --network pecan_pecan --volume pecan_pecan:/data --env FQDN=docker pecan/data:develop
        
        docker run --rm --network pecan_pecan --volume pecan_pecan:/data pecan/data:develop chown -R "$(id -u).$(id -g)" /data

        docker run --user="$(id -u)" --rm --network pecan_pecan --volume pecan_pecan:/data --env FQDN=docker pecan/data:develop

        cp docker/web/config.docker.php web/config.php
                

        docker-compose up -d traefik
        docker-compose up -d rabbitmq
        docker-compose up -d postgres
        docker-compose up -d bety
        docker-compose up -d rstudio
        docker-compose up -d docs
        docker-compose up -d pecan
        docker-compose up -d monitor
        docker-compose up -d executor
        docker-compose up -d sipnet
        docker-compose up -d dbsync
        docker-compose up -d api
    - name: Wait for services to start
      run: |
       
        docker-compose ps
        sleep 20 # Adjust the duration as needed
        docker-compose ps
        sleep 20
        docker-compose ps
        sleep 20
      
    
    - name: Display running containers
      run: |
        docker-compose ps
        docker network ls 
        docker network inspect bridge
    # run SIPNET test
    # run SIPNET test
    - name: Run cURL command
      run: |
        curl -v -L -X POST -H "Host: pecan.localhost" \
            -F 'hostname=docker' \
            -F 'modelid=1000000014' \
            -F 'sitegroupid=1' \
            -F 'siteid=678' \
            -F 'sitename=Park Falls WLEF (US-PFa)' \
            -F 'pft[]=temperate.coniferous' \
            -F 'start=2004/01/01' \
            -F 'end=2004/12/31' \
            -F 'input_met=5000000003' \
            -F 'email=' \
            -F 'notes=' \
        'http://172.17.0.1/pecan/04-runpecan.php'
        
        sleep 200
        curl -v -L -H "Host: pecan.localhost" \
        'http://172.17.0.1/pecan/08-finished.php?workflowid=99000000001&hostname=docker&loglines=100'
        curl -v -L -H "Host: pecan.localhost" \
        'http://172.17.0.1/pecan/dataset.php?workflowid=99000000001&type=file&name=workflow.Rout'



        